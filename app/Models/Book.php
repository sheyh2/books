<?php

namespace App\Models;

use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Carbon;
use Illuminate\Database\Eloquent\Builder;

/**
 * Class Book
 * @package App\Models\Book
 *
 * @property int      $id
 * @property int      $image_id
 * @property int      $file_id
 * @property float    $rating
 * @property int      $publish_date
 *
 * @property Carbon   $created_at
 * @property Carbon   $updated_at
 *
 * @property BookText $relationBookText
 * @property Image    $relationImage
 */
class Book extends Model{
    /**
     * @var string
     */
    protected $table = 'books';

    /**
     * @var array
     */
    protected $fillablel = [
        'sub_category_id',
        'image_id',
        'like',
        'dislike',
        'publish_date'
    ];

    /**
     * @return Builder
     */
    public static function query(): Builder{
        return parent::query(); // TODO: Change the autogenerated stub
    }

    // Actions

    /**
     * @param int $paginate
     * @return LengthAwarePaginator
     */
    public function paginateList(int $paginate): LengthAwarePaginator{
        return self::query()
            ->paginate($paginate);
    }

    // Related
    /**
     * @return BelongsTo
     */
    public function relationBookText(): BelongsTo{
        return $this->belongsTo(BookText::class, 'id', 'book_id');
    }

    /**
     * @return BelongsTo
     */
    public function relationImage(): BelongsTo{
        return $this->belongsTo(Image::class, 'id', 'image_id');
    }

    /**
     * @param int $paginate
     * @return LengthAwarePaginator
     */
    public function getItems(int $paginate = 10): LengthAwarePaginator{
        return self::query()
            ->with(['relationBookText'])
            ->paginate($paginate);
    }

    // Getters
    /**
     * @return int
     */
    public function getId(): int{
        return $this->id;
    }

    /**
     * @return int
     */
    public function getImageId():int{
        return $this->image_id;
    }

    /**
     * @return int
     */
    public function getFileId():int{
        return $this->file_id;
    }

    /**
     * @return float
     */
    public function getRating(): float{
        return $this->rating;
    }

    /**
     * @return int
     */
    public function getPublishDate(): int{
        return $this->publish_date;
    }

    /**
     * @return Carbon
     */
    public function getCreatedAt(): Carbon{
        return $this->created_at;
    }
}
